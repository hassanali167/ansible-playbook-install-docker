---
- name: Install and Configure Docker on Kali Linux (Debian-based)
  hosts: all
  become: yes
  vars:
    docker_group: docker
  tasks:

    - name: Check if Docker is already installed
      command: docker --version
      register: docker_installed
      ignore_errors: yes
      changed_when: false

    - name: Skip installation if Docker is already installed
      debug:
        msg: "Docker is already installed: {{ docker_installed.stdout }}"
      when: docker_installed.rc == 0

    - name: Uninstall conflicting packages
      apt:
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - podman-docker
          - containerd
          - runc
        state: absent
        purge: yes
      when: docker_installed.rc != 0

    - name: Install required dependencies
      apt:
        name:
          - ca-certificates
          - curl
        state: present
        update_cache: yes
      when: docker_installed.rc != 0

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      when: docker_installed.rc != 0

    - name: Add Docker's official GPG key
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
      when: docker_installed.rc != 0

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable" > /etc/apt/sources.list.d/docker.list
      args:
        executable: /bin/bash
      when: docker_installed.rc != 0

    - name: Update package index
      apt:
        update_cache: yes
      when: docker_installed.rc != 0

    - name: Install Docker Engine
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      when: docker_installed.rc != 0

    - name: Ensure docker group exists
      group:
        name: "{{ docker_group }}"
        state: present

    - name: Add user to the Docker group for sudo-less access
      user:
        name: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
        groups: "{{ docker_group }}"
        append: yes

    - name: Ensure Docker socket permissions allow group access
      file:
        path: /var/run/docker.sock
        owner: root
        group: "{{ docker_group }}"
        mode: '0660'

    - name: Restart Docker service to apply changes
      systemd:
        name: docker
        state: restarted
        enabled: yes

    - name: Verify Docker installation by running hello-world
      command: docker run hello-world
      register: docker_test
      changed_when: false
      ignore_errors: yes

    - name: Display Docker test output
      debug:
        msg: "{{ docker_test.stdout }}"
